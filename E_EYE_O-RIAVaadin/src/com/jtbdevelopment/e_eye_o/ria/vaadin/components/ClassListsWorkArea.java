package com.jtbdevelopment.e_eye_o.ria.vaadin.components;

import com.jtbdevelopment.e_eye_o.entities.AppUser;
import com.jtbdevelopment.e_eye_o.entities.ClassList;
import com.jtbdevelopment.e_eye_o.entities.Student;
import com.jtbdevelopment.e_eye_o.ria.vaadin.components.filterabletables.ClassListTable;
import com.jtbdevelopment.e_eye_o.ria.vaadin.components.filterabletables.IdObjectTable;
import com.jtbdevelopment.e_eye_o.ria.vaadin.components.filterabletables.StudentTable;
import com.vaadin.event.LayoutEvents;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.*;
import com.vaadin.ui.themes.Runo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.config.ConfigurableBeanFactory;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import java.util.Arrays;

/**
 * Date: 3/10/13
 * Time: 4:40 PM
 */
@Component
@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)
public class ClassListsWorkArea extends CustomComponent {
    private ClassListTable classListTable;

    /**
     * The constructor should first build the main layout, set the
     * composition root and then do any custom initialization.
     * <p/>
     * The constructor will not be automatically regenerated by the
     * visual editor.
     */
    @Autowired
    public ClassListsWorkArea(final ClassListTable classListTable, final StudentTable studentTable) {
        VerticalLayout mainLayout = new VerticalLayout();
        mainLayout.setImmediate(true);
        mainLayout.setSpacing(true);

        this.classListTable = classListTable;
        classListTable.setClickedOnListener(new IdObjectTable.ClickedOnListener<ClassList>() {
            @Override
            public void handleClickEvent(final ClassList entity) {
                studentTable.setTableDriver(entity);
            }
        });
        mainLayout.addComponent(classListTable);

        studentTable.setClickedOnListener(new IdObjectTable.ClickedOnListener<Student>() {
            @Override
            public void handleClickEvent(final Student entity) {
                //  TODO if even needed
            }
        });
        TabSheet tabSheet = new TabSheet();
        tabSheet.addTab(studentTable).setCaption("Students");
        //  TODO - class this
        GridLayout photos = new GridLayout(4, 2);
        photos.setWidth("100%");
        final TabSheet.Tab tab = tabSheet.addTab(photos);
        tab.setCaption("Photos");
        photos.setMargin(true);

        for (String string : Arrays.asList(
                "dummyphotos/3-MostParts.JPG",
                "dummyphotos/4-MastAndBoom.JPG",
                "dummyphotos/3-MostParts.JPG",
                "dummyphotos/5-Drying.JPG",
                "dummyphotos/6-Finished.jpg",
                "dummyphotos/7-TensionControls.jpg"
        )) {
            final ThemeResource source = new ThemeResource(string);
            final Embedded photo = new Embedded(null, source);
            photo.setAlternateText(string);
            photo.setHeight(100, Unit.PIXELS);
            photo.setWidth(100, Unit.PIXELS);

            VerticalLayout photoAndText =new VerticalLayout();
            photoAndText.addComponent(photo);
            Label text = new Label(string);
            text.setWidth(null);
            photoAndText.addComponent(text);
            photoAndText.setComponentAlignment(photo, Alignment.MIDDLE_CENTER);
            photoAndText.setComponentAlignment(text, Alignment.MIDDLE_CENTER);

            CssLayout photoLayout = new CssLayout();
            photoLayout.addComponent(photoAndText);

            CssLayout select = new CssLayout();
            select.addStyleName(Runo.CSSLAYOUT_SELECTABLE);
            select.addComponent(photoLayout);

            photos.addComponent(select);
            photos.setComponentAlignment(select, Alignment.MIDDLE_CENTER);
        }
        photos.setImmediate(true);
        photos.addLayoutClickListener(new LayoutEvents.LayoutClickListener() {
            private com.vaadin.ui.Component lastSelected = null;

            @Override
            public void layoutClick(final LayoutEvents.LayoutClickEvent event) {
                if (lastSelected != null) {
                    lastSelected.removeStyleName(Runo.CSSLAYOUT_SELECTABLE_SELECTED);
                }
                lastSelected = event.getChildComponent();
                if (lastSelected != null) {
                    lastSelected.addStyleName(Runo.CSSLAYOUT_SELECTABLE_SELECTED);
                }
                if (event.isDoubleClick()) {
                    com.vaadin.ui.Component clicked = event.getClickedComponent();
                    while (clicked instanceof CssLayout) {
                        clicked = ((CssLayout) clicked).getComponent(0);
                    }
                    if (clicked instanceof Embedded) {
                        Window window = new Window();
                        Panel panel = new Panel();
                        panel.setSizeFull();
                        Embedded bigPhoto = new Embedded();
                        bigPhoto.setSource(((Embedded) clicked).getSource());
                        bigPhoto.setAlternateText(((Embedded) clicked).getAlternateText());
                        bigPhoto.setSizeFull();
                        panel.setContent(bigPhoto);
                        window.setContent(panel);
                        window.setModal(false);
                        window.addStyleName(Runo.WINDOW_DIALOG);
                        window.setSizeFull();
                        window.setCaption(bigPhoto.getAlternateText());
                        getUI().addWindow(window);
                    }
                }
            }
        });
        mainLayout.addComponent(tabSheet);

        setCompositionRoot(mainLayout);
    }

    @Override
    public void attach() {
        super.attach();
        final AppUser appUser = getSession().getAttribute(AppUser.class);
        classListTable.setTableDriver(appUser);
        getUI().setFocusedComponent(classListTable.getSearchFor());
    }

    @Override
    public void detach() {
        super.detach();
    }
}
