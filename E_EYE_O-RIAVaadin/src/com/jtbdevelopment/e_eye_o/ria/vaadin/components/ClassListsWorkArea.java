package com.jtbdevelopment.e_eye_o.ria.vaadin.components;

import com.jtbdevelopment.e_eye_o.entities.AppUser;
import com.jtbdevelopment.e_eye_o.entities.ClassList;
import com.jtbdevelopment.e_eye_o.entities.Student;
import com.jtbdevelopment.e_eye_o.ria.vaadin.components.filterabletables.ClassListTable;
import com.jtbdevelopment.e_eye_o.ria.vaadin.components.filterabletables.IdObjectTable;
import com.jtbdevelopment.e_eye_o.ria.vaadin.components.filterabletables.StudentTable;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.VerticalLayout;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.config.ConfigurableBeanFactory;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

/**
 * Date: 3/10/13
 * Time: 4:40 PM
 */
@Component
@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)
public class ClassListsWorkArea extends CustomComponent {
    private ClassListTable classListTable;

    /**
     * The constructor should first build the main layout, set the
     * composition root and then do any custom initialization.
     * <p/>
     * The constructor will not be automatically regenerated by the
     * visual editor.
     */
    @Autowired
    public ClassListsWorkArea(final ClassListTable classListTable, final StudentTable studentTable) {
        VerticalLayout mainLayout = new VerticalLayout();
        mainLayout.setImmediate(true);

        this.classListTable = classListTable;
        classListTable.setClickedOnListener(new IdObjectTable.ClickedOnListener<ClassList>() {
            @Override
            public void handleClickEvent(final ClassList entity) {
                studentTable.setTableDriver(entity);
            }
        });
        mainLayout.addComponent(classListTable);

        studentTable.setClickedOnListener(new IdObjectTable.ClickedOnListener<Student>() {
            @Override
            public void handleClickEvent(final Student entity) {
                //  TODO if even needed
            }
        });
        mainLayout.addComponent(studentTable);

        setCompositionRoot(mainLayout);
    }

    @Override
    public void attach() {
        super.attach();
        final AppUser appUser = getSession().getAttribute(AppUser.class);
        classListTable.setTableDriver(appUser);
        getUI().setFocusedComponent(classListTable.getSearchFor());
    }

    @Override
    public void detach() {
        super.detach();
    }
}
