package com.jtbdevelopment.e_eye_o.ria.vaadin.components;

import com.jtbdevelopment.e_eye_o.entities.Student;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.fieldgroup.BeanFieldGroup;
import com.vaadin.data.fieldgroup.FieldGroup;
import com.vaadin.data.validator.BeanValidator;
import com.vaadin.ui.*;

/**
 * Date: 3/8/13
 * Time: 11:20 PM
 */
public class StudentForm extends CustomComponent {

    @AutoGenerated
    private FormLayout mainLayout;

    /**
     * The constructor should first build the main layout, set the
     * composition root and then do any custom initialization.
     * <p/>
     * The constructor will not be automatically regenerated by the
     * visual editor.
     */
    public StudentForm(final Student student) {
        buildMainLayout(student);
        setCompositionRoot(mainLayout);

        // TODO add user code here
    }

    @AutoGenerated
    private void buildMainLayout(final Student student) {
        // the main layout and components will be created here
        mainLayout = new FormLayout();
        mainLayout.setSizeUndefined();
        mainLayout.setMargin(true);

        //BeanItem<Student> bean = new BeanItem<>(student);
        final BeanFieldGroup<Student> beanFieldGroup = new BeanFieldGroup<>(Student.class);
        beanFieldGroup.setItemDataSource(student);
        TextField idField = new TextField("ID");
        idField.setReadOnly(true);
        beanFieldGroup.bind(idField, "id");
        mainLayout.addComponent(idField);

        TextField firstName = new TextField("First Name");
        beanFieldGroup.bind(firstName, "firstName");
        firstName.addValidator(new BeanValidator(Student.class, "firstName"));
        firstName.setReadOnly(false);
        mainLayout.addComponent(firstName);

        final TextField lastName = new TextField("Last Name");
        beanFieldGroup.bind(lastName, "lastName");
        firstName.addValidator(new BeanValidator(Student.class, "lastName"));
        mainLayout.addComponent(lastName);

        mainLayout.addComponent(new TwinColSelect("Classes"));

        final Button save = new Button("Do Something");
        mainLayout.addComponent(save);
        mainLayout.setReadOnly(false);
        save.addClickListener(new Button.ClickListener() {
            @Override
            public void buttonClick(final Button.ClickEvent event) {
                try {
                    beanFieldGroup.commit();
                } catch (FieldGroup.CommitException e) {
                    e.printStackTrace();
                }
            }
        });
        final Button reset = new Button("Reset");
        mainLayout.addComponent(reset);
        save.addClickListener(new Button.ClickListener() {
            @Override
            public void buttonClick(final Button.ClickEvent event) {
                beanFieldGroup.discard();
            }
        });
    }

}
