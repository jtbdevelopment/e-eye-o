package com.jtbdevelopment.e_eye_o.ria.vaadin.components;

import com.google.common.eventbus.EventBus;
import com.jtbdevelopment.e_eye_o.DAO.ReadWriteDAO;
import com.jtbdevelopment.e_eye_o.entities.AppUser;
import com.jtbdevelopment.e_eye_o.entities.IdObjectFactory;
import com.jtbdevelopment.e_eye_o.entities.Observation;
import com.jtbdevelopment.e_eye_o.entities.Student;
import com.jtbdevelopment.e_eye_o.ria.vaadin.utils.AllItemsBeanItemContainer;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Container;
import com.vaadin.data.util.filter.SimpleStringFilter;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

/**
 * Date: 3/10/13
 * Time: 4:40 PM
 */
public class StudentsWorkArea extends CustomComponent {
    @AutoGenerated
    private VerticalLayout mainLayout;

    private final ReadWriteDAO readWriteDAO;

    private final IdObjectFactory idObjectFactory;

    private final AppUser appUser;

    private final EventBus eventBus;

    private final AllItemsBeanItemContainer<Student> students;

    private final AllItemsBeanItemContainer<Observation> observationsForStudent;

    private IdObjectTable<Student> studentTable;

    /**
     * The constructor should first build the main layout, set the
     * composition root and then do any custom initialization.
     * <p/>
     * The constructor will not be automatically regenerated by the
     * visual editor.
     */
    public StudentsWorkArea(final ReadWriteDAO readWriteDAO, final IdObjectFactory idObjectFactory, final EventBus eventBus, final AppUser appUser) {
        this.readWriteDAO = readWriteDAO;
        this.eventBus = eventBus;
        this.appUser = appUser;
        this.idObjectFactory = idObjectFactory;
        students = new AllItemsBeanItemContainer<>(Student.class, readWriteDAO.getEntitiesForUser(Student.class, appUser));
        observationsForStudent = new AllItemsBeanItemContainer<>(Observation.class);
        buildMainLayout();
        setCompositionRoot(mainLayout);

    }

    @AutoGenerated
    private void buildMainLayout() {
        mainLayout = new VerticalLayout();
        mainLayout.setImmediate(true);

        studentTable = new IdObjectTable<Student>(Student.class, readWriteDAO, idObjectFactory, eventBus, appUser, students) {
            @Override
            void showEntityEditor(final Student entity) {
                getUI().addWindow(new StudentEditorDialog(readWriteDAO, eventBus, entity));
            }

            @Override
            void handleClickEvent(final ItemClickEvent event, final Student entity) {
                observationsForStudent.removeAllItems();
                observationsForStudent.addAll(readWriteDAO.getAllObservationsForEntity(entity));
            }

            @Override
            Container.Filter generateFilter(final String searchFor) {
                return new SimpleStringFilter("viewableDescription", searchFor, true, false);
            }
        };
        mainLayout.addComponent(studentTable);

        Table observationTable = new Table();
        observationTable.setContainerDataSource(observationsForStudent);
        observationTable.setSelectable(true);
        observationTable.setSortEnabled(true);
        observationTable.setSizeFull();
        mainLayout.addComponent(observationTable);
    }

    @Override
    public void attach() {
        super.attach();
        getUI().setFocusedComponent(studentTable.getSearchFor());
    }

    @Override
    public void detach() {
        super.detach();
    }
}
